apiVersion: kubeadm.k8s.io/v1alpha3
kind: ClusterConfiguration
clusterName: "{{ cluster_name }}"
apiServerCertSANs:
{% for host in groups['k8s_masters'] %}
  - "{{ hostvars[host].ansible_host }}"
{% endfor %}
  - "127.0.0.1"
  - "10.96.0.1"
  - "{{ k8s_control_plane_uri }}"
auditPolicy:
  logDir: /var/log/kubernetes/audit
  logMaxAge: 2
  path: ""
certificatesDir: /etc/kubernetes/pki
controlPlaneEndpoint: "{{ k8s_control_plane_uri }}:6443"
apiServerExtraArgs:
  authorization-mode: "Node,RBAC"
etcd:
  # one of local or external
  local:
    image: "k8s.gcr.io/etcd-amd64:3.2.18"
    dataDir: "/var/lib/etcd"    
  extraArgs:
    listen-client-urls: [{% for host in groups['k8s_masters'] %}"http://{{ hostvars[host].inventory_hostname }}:2379"{% if not loop.last %},{% endif %}{% endfor %}]
  serverCertSANs:
    - "{{ k8s_advertise_addr }}"  
{% for host in groups['k8s_masters'] %}
    - "{{ hostvars[host].inventory_hostname }}"
{% endfor %}
    - "{{ k8s_control_plane_uri }}"
  peerCertSANs:
{% for host in groups['k8s_masters'] %}
    - "{{ hostvars[host].ansible_host }}"
{% endfor %}
imageRepository: k8s.gcr.io
kubernetesVersion: v1.12.3
networking:
  dnsDomain: cluster.local
  podSubnet: {{ k8s_cluster_cidr }}
---
apiVersion: kubeadm.k8s.io/v1alpha3
kind: InitConfiguration
apiEndpoint:
  advertiseAddress: "{{ k8s_advertise_addr }}"
  bindPort: 6443
bootstrapTokens:
- token: "{{ k8s_cluster_token }}"
  description: "kubeadm bootstrap token"
  ttl: "24h"
  usages:
  - signing
  - authentication
apiEndpoint:
  advertiseAddress: "{{ k8s_advertise_addr }}"
  bindPort: 6443
nodeRegistration:
  name: {{ node_fqdn }}
{% if k8s_container_runtime == 'cri-o' %}
  criSocket: /var/run/crio/crio.sock
{% else %}
  criSocket: /var/run/dockershim.sock
{% endif %}
  taints:
    - key: "kubeadmNode"
      value: "master"
      effect: "NoSchedule"
---
apiVersion: kubeproxy.config.k8s.io/v1alpha1
kind: KubeProxyConfiguration
bindAddress: 0.0.0.0
clientConnection:
  acceptContentTypes: ""
  burst: 10
  contentType: application/vnd.kubernetes.protobuf
  kubeconfig: /var/lib/kube-proxy/kubeconfig.conf
  qps: 5
clusterCIDR: {{ k8s_cluster_cidr }}
configSyncPeriod: 15m0s
conntrack:
  max: null
  maxPerCore: 32768
  min: 131072
  tcpCloseWaitTimeout: 1h0m0s
  tcpEstablishedTimeout: 24h0m0s
enableProfiling: false
healthzBindAddress: 0.0.0.0:10256
iptables:
  masqueradeAll: false
  masqueradeBit: 14
  minSyncPeriod: 0s
  syncPeriod: 30s
ipvs:
  excludeCIDRs: null
  minSyncPeriod: 0s
  scheduler: ""
  syncPeriod: 30s
metricsBindAddress: 127.0.0.1:10249
resourceContainer: /kube-proxy
udpIdleTimeout: 250ms

apiVersion: kubeadm.k8s.io/v1beta2
kind: InitConfiguration
bootstrapTokens:
- groups:
  - system:bootstrappers:kubeadm:default-node-token
  token: "{{ k8s_cluster_token }}"
  ttl: 24h0m0s
  usages:
  - signing
  - authentication
localAPIEndpoint:
  advertiseAddress: {{ k8s_advertise_addr }}
  bindPort: 6443
nodeRegistration:
  criSocket: /var/run/dockershim.sock
  name: {{ node_fqdn }}
  taints:
  - effect: NoSchedule
    key: node-role.kubernetes.io/master
---
apiVersion: kubeadm.k8s.io/v1beta2
kind: ClusterConfiguration
apiServer:
  certSANs:
  - "{{ k8s_advertise_addr }}"  
{% for host in groups['k8s_masters'] %}
  - "{{ hostvars[host].node_fqdn }}"
{% endfor %}
{% for host in groups['k8s_masters'] %}
  - "{{ hostvars[host].node_fqdn }}"
{% endfor %}
  - "127.0.0.1"
  - "10.96.0.1"
  - "{{ k8s_control_plane_uri }}"
  timeoutForControlPlane: 4m0s
certificatesDir: /etc/kubernetes/pki
clusterName: "{{ cluster_name }}"
controlPlaneEndpoint: "{{ k8s_control_plane_uri }}:6443"
controllerManager: {}
dns:
  type: CoreDNS
etcd:
  local:
    dataDir: /var/lib/etcd
imageRepository: k8s.gcr.io
kubernetesVersion: stable
networking:
  dnsDomain: cluster.local
  podSubnet: {{ k8s_cluster_cidr }}
  serviceSubnet: 10.96.0.0/12
scheduler: {}
---
apiVersion: kubeproxy.config.k8s.io/v1alpha1
kind: KubeProxyConfiguration
bindAddress: 0.0.0.0
clientConnection:
  acceptContentTypes: ""
  burst: 10
  contentType: application/vnd.kubernetes.protobuf
  kubeconfig: /var/lib/kube-proxy/kubeconfig.conf
  qps: 5
clusterCIDR: "{{ k8s_cluster_cidr }}"
configSyncPeriod: 15m0s
healthzBindAddress: 0.0.0.0:10256
iptables:
  masqueradeAll: false
  masqueradeBit: 14
  minSyncPeriod: 0s
  syncPeriod: 30s
ipvs:
  minSyncPeriod: 0s
  scheduler: ""
  syncPeriod: 30s
metricsBindAddress: 127.0.0.1:10249
resourceContainer: /kube-proxy
udpIdleTimeout: 250ms

---
- hosts: all
  gather_facts: false

  vars:
    fusion_vm_folder: ../virtuals
    ova_template_path: "../{{ ova_template }}"
    gen_script_folder: ../tmp/{{ cluster_pkg_folder }}
    vmware_dhcpd_base_path: '/Library/Preferences/VMware\ Fusion/'
    vmware_dhcpd_cmd: vmnet-cli

  roles:
    - role: common

  tasks:    
  - name: Ensure the target fusion_vm_folder exists
    local_action:
      module: file
      path: "{{ fusion_vm_folder }}"
      state: directory

  - name: Ensure the target folder for generated scripts exists
    local_action:
      module: file
      path: "{{ gen_script_folder }}"
      state: directory

  - name: Stop the existing VMs (If they aren't running the errors will be ignored).
    local_action:
      module: shell
      _raw_params: vmrun stop {{ fusion_vm_folder }}/{{ inventory_hostname }}.vmwarevm/{{ inventory_hostname }}.vmx
    ignore_errors: true

  - name: Use ovftool to deploy cluster-node ova to Fusion VMX.
    local_action:
      module: shell
      _raw_params: ovftool -tt=vmx -o --network={{ fusion_net }} --powerOffTarget --name={{ inventory_hostname }} {{ ova_template_path }} {{ fusion_vm_folder }}/
  
  - name: Assign the VM CPU Count
    local_action:
      module: lineinfile
      path: "{{ fusion_vm_folder }}/{{ inventory_hostname }}.vmwarevm/{{ inventory_hostname }}.vmx"
      state: present
      regexp: '^numvcpus =\s'
      line: 'numvcpus = "{{ numvcpus }}"'
    when: numvcpus is defined

  - name: Assign the VM Memory
    local_action:
      module: lineinfile
      path: "{{ fusion_vm_folder }}/{{ inventory_hostname }}.vmwarevm/{{ inventory_hostname }}.vmx"
      state: present
      regexp: '^memsize =\s'
      line: 'memsize = "{{ memsize }}"'
    when: memsize is defined

  - name: Remove 2nd interface when there is no data network
    local_action:
      module: lineinfile
      path: "{{ fusion_vm_folder }}/{{ inventory_hostname }}.vmwarevm/{{ inventory_hostname }}.vmx"
      state: absent
      regexp: 'ethernet1'
    when: fusion_data_net is undefined

  - name: Start the VMs to get the generated MAC addresses
    local_action:
      module: shell
      _raw_params: vmrun start {{ fusion_vm_folder }}/{{ inventory_hostname }}.vmwarevm/{{ inventory_hostname }}.vmx nogui
    become: false

  - name: Waiting for VMs to generate MAC addresses
    pause:
      seconds: 60
    
  - name: Scan the VMX files for the Control/Data mac addresses
    local_action:
      module: shell
      _raw_params: cat {{ fusion_vm_folder }}/{{ inventory_hostname }}.vmwarevm/{{ inventory_hostname }}.vmx | grep "ethernet0.generatedAddress = " | sed -e 's/ethernet0.generatedAddress = //g' -e 's/"//g'
    register: vm_mac
  
  - debug: msg="{{ vm_mac.stdout }}"

  - fail: msg="No MAC Found! Unable to get the MAC address from the VMX!"
    when: vm_mac is not defined

  - name: Scan the VMX files for the Data mac addresses
    local_action:
      module: shell
      _raw_params: cat {{ fusion_vm_folder }}/{{ inventory_hostname }}.vmwarevm/{{ inventory_hostname }}.vmx | grep "ethernet1.generatedAddress = " | sed -e 's/ethernet1.generatedAddress = //g' -e 's/"//g'
    register: vm_data_mac
    when: fusion_data_net is defined
  
  - debug: msg="{{ vm_data_mac.stdout }}"
    when: fusion_data_net is defined

  - fail: msg="No MAC Found! Unable to get the Data MAC address from the VMX!"
    when: fusion_data_net is defined and vm_data_mac is undefined

  - name: Generate the DHCPD Control/Data configuration entries
    local_action:
      module: template
      src: templates/dhcpd_entry.j2
      dest: "{{ gen_script_folder }}/{{ inventory_hostname }}_dhcpd.conf"
  
  - name: Generate the DHCPD Data configuration entries
    local_action:
      module: template
      src: templates/dhcpd_data_entry.j2
      dest: "{{ gen_script_folder }}/{{ inventory_hostname }}_data_dhcpd.conf"
    when: fusion_data_net is defined

  - name: Stop the VMs 
    local_action:
      module: shell
      _raw_params: vmrun stop {{ fusion_vm_folder}}/{{ inventory_hostname }}.vmwarevm/{{ inventory_hostname }}.vmx nogui

  - name: Assign the Fusion Control/Data Network Connection Type
    local_action:
      module: lineinfile
      path: "{{ fusion_vm_folder }}/{{ inventory_hostname }}.vmwarevm/{{ inventory_hostname }}.vmx"
      state: present
      regexp: '^ethernet0.connectionType =\s'
      line: 'ethernet0.connectionType = "{{ fusion_net_type }}"'

  - name: Assign the Fusion Data Network Connection Type
    local_action:
      module: lineinfile
      path: "{{ fusion_vm_folder }}/{{ inventory_hostname }}.vmwarevm/{{ inventory_hostname }}.vmx"
      state: present
      regexp: '^ethernet1.connectionType =\s'
      line: 'ethernet1.connectionType = "{{ fusion_data_net_type }}"'
    when: fusion_data_net is defined

  - name: Assign the Fusion Control/Data Network to Interface One
    local_action:
      module: lineinfile
      path: "{{ fusion_vm_folder }}/{{ inventory_hostname }}.vmwarevm/{{ inventory_hostname }}.vmx"
      state: present
      regexp: '^ethernet0.vnet =\s'
      line: 'ethernet0.vnet = "{{ fusion_net }}"'

  - name: Assign the Fusion Data Network to Interface Two
    local_action:
      module: lineinfile
      path: "{{ fusion_vm_folder }}/{{ inventory_hostname }}.vmwarevm/{{ inventory_hostname }}.vmx"
      state: present
      regexp: '^ethernet1.vnet =\s'
      line: 'ethernet1.vnet = "{{ fusion_data_net }}"'
    when: fusion_data_net is defined

  - name: Remove the DHCPD Control/Data fragment file
    local_action:
      module: shell
      _raw_params: rm {{ gen_script_folder }}/dhcpd_frag.conf
    ignore_errors: true
    run_once: true

  - name: Remove the DHCPD Data fragment file
    local_action:
      module: shell
      _raw_params: rm {{ gen_script_folder }}/dhcpd_data_frag.conf
    ignore_errors: true
    run_once: true
    when: fusion_data_net is defined

  - name: Concatenate the Control/Data entry header
    local_action:
      module: shell
      _raw_params: echo '### {{ cluster_type }}:{{ cluster_name }}:start' >> {{ gen_script_folder }}/dhcpd_frag.conf
    run_once: true

  - name: Concatenate the new Control/Data entries
    local_action:
      module: shell
      _raw_params: cat {{ gen_script_folder }}/{{ inventory_hostname }}_dhcpd.conf >> {{ gen_script_folder }}/dhcpd_frag.conf

  - name: Concatenate the Control/Data entry footer
    local_action:
      module: shell
      _raw_params: echo '### {{ cluster_type }}:{{ cluster_name }}:end' >> {{ gen_script_folder }}/dhcpd_frag.conf
    run_once: true

  - name: Concatenate the Data entry header
    local_action:
      module: shell
      _raw_params: echo '### {{ cluster_type }}:{{ cluster_name }}:start' >> {{ gen_script_folder }}/dhcpd_data_frag.conf
    run_once: true
    when: fusion_data_net is defined

  - name: Concatenate the new Data entries
    local_action:
      module: shell
      _raw_params: cat {{ gen_script_folder }}/{{ inventory_hostname }}_data_dhcpd.conf >> {{ gen_script_folder }}/dhcpd_data_frag.conf
    when: fusion_data_net is defined

  - name: Concatenate the Data entry footer
    local_action:
      module: shell
      _raw_params: echo '### {{ cluster_type }}:{{ cluster_name }}:end' >> {{ gen_script_folder }}/dhcpd_data_frag.conf
    run_once: true
    when: fusion_data_net is defined

  - name: Stop the VM Network
    local_action:
      module: shell
      _raw_params: '{{ vmware_dhcpd_cmd }} --stop'
    delegate_to: 127.0.0.1
    become: true
    run_once: true

  - name: Remove any Control/Data block for the current cluster
    local_action:
      module: shell
      _raw_params: sed '/### {{ cluster_type }}:{{ cluster_name }}:start/,/### {{ cluster_type }}:{{ cluster_name }}:end/d' {{ vmware_dhcpd_base_path }}{{ fusion_net }}/dhcpd.conf > {{ vmware_dhcpd_base_path }}{{ fusion_net }}/dhcpd-temp.conf
    delegate_to: 127.0.0.1
    become: true
    run_once: true

  - name: Remove any Data block for the current cluster
    local_action:
      module: shell
      _raw_params: sed '/### {{ cluster_type }}:{{ cluster_name }}:start/,/### {{ cluster_type }}:{{ cluster_name }}:end/d' {{ vmware_dhcpd_base_path }}{{ fusion_data_net }}/dhcpd.conf > {{ vmware_dhcpd_base_path }}{{ fusion_data_net }}/dhcpd-temp.conf
    delegate_to: 127.0.0.1
    become: true
    run_once: true
    when: fusion_data_net is defined

  - name: Add current DHCP Control/Data block for cluster
    local_action:
      module: shell
      _raw_params: cat {{ gen_script_folder }}/dhcpd_frag.conf >> {{ vmware_dhcpd_base_path }}{{ fusion_net }}/dhcpd-temp.conf
    delegate_to: 127.0.0.1
    become: true
    run_once: true

  - name: Add current DHCP Data block for cluster
    local_action:
      module: shell
      _raw_params: cat {{ gen_script_folder }}/dhcpd_data_frag.conf >> {{ vmware_dhcpd_base_path }}{{ fusion_data_net }}/dhcpd-temp.conf
    delegate_to: 127.0.0.1
    become: true
    run_once: true
    when: fusion_data_net is defined

  - name: Backup current Control/Data DHCP
    local_action:
      module: shell
      _raw_params: cp {{ vmware_dhcpd_base_path }}{{ fusion_net }}/dhcpd.conf {{ vmware_dhcpd_base_path }}{{ fusion_net }}/dhcpd-backup.conf
    delegate_to: 127.0.0.1
    become: true
    run_once: true

  - name: Backup current Data DHCP
    local_action:
      module: shell
      _raw_params: cp {{ vmware_dhcpd_base_path }}{{ fusion_data_net }}/dhcpd.conf {{ vmware_dhcpd_base_path }}{{ fusion_data_net }}/dhcpd-backup.conf
    delegate_to: 127.0.0.1
    become: true
    run_once: true
    when: fusion_data_net is defined

  - name: Replace current Control/Data DHCP
    local_action:
      module: shell
      _raw_params: mv {{ vmware_dhcpd_base_path }}{{ fusion_net }}/dhcpd-temp.conf {{ vmware_dhcpd_base_path }}{{ fusion_net }}/dhcpd.conf
    delegate_to: 127.0.0.1
    become: true
    run_once: true

  - name: Replace current Data DHCP
    local_action:
      module: shell
      _raw_params: mv {{ vmware_dhcpd_base_path }}{{ fusion_data_net }}/dhcpd-temp.conf {{ vmware_dhcpd_base_path }}{{ fusion_data_net }}/dhcpd.conf
    delegate_to: 127.0.0.1
    become: true
    run_once: true
    when: fusion_data_net is defined

  - name: Start the VM Network
    local_action:
      module: shell
      _raw_params: '{{ vmware_dhcpd_cmd }} --start'
    delegate_to: 127.0.0.1
    become: true
    run_once: true

  - name: Remove the DHCPD Control/Data configuration file fragments
    local_action:
      module: file
      path: "{{ gen_script_folder }}/{{ inventory_hostname }}_dhcpd.conf"
      state: absent
    delegate_to: 127.0.0.1
    
  - name: Remove the DHCPD Data configuration file fragments
    local_action:
      module: file
      path: "{{ gen_script_folder }}/{{ inventory_hostname }}_data_dhcpd.conf"
      state: absent
    delegate_to: 127.0.0.1
    when: fusion_data_net is defined

  - name: Start the VMs 
    local_action:
      module: shell
      _raw_params: vmrun start {{ fusion_vm_folder}}/{{ inventory_hostname }}.vmwarevm/{{ inventory_hostname }}.vmx nogui

  - name: waiting 180 secs for servers to start up and fetch their permanent ip addresses
    local_action: wait_for host={{ inventory_hostname }} port=22 state=started delay=180 timeout=600
    become: false

- name: set k8s_version default
  set_fact:
    k8s_version: 1.12.*
  run_once: true
  when: k8s_version is undefined

- debug: msg="{{ k8s_version }}"
  run_once: true

- name: set k8s_network_cni default
  set_fact:
    k8s_network_cni: "canal"
  run_once: true
  when: k8s_network_cni is undefined

- debug: msg="{{ k8s_network_cni }}"
  run_once: true

- name: set k8s_install_istio default
  set_fact:
    k8s_install_istio: false
  run_once: true
  when: k8s_install_istio is undefined and k8s_network_cni != 'calico-policy'

- name: set k8s_install_istio default
  set_fact:
    k8s_install_istio: true
  run_once: true
  when: k8s_install_istio is undefined and k8s_network_cni == 'calico-policy'

- debug: msg="install istio -> {{ k8s_install_istio }}"
  run_once: true

- name: set k8s_install_knative_lite default
  set_fact:
    k8s_install_knative_lite: false
  run_once: true
  when: k8s_install_knative_lite is undefined

- debug: msg="install knative -> {{ k8s_install_knative_lite }}"
  run_once: true

- name: set k8s_istio_version default
  set_fact:
    k8s_istio_version: 1.0.4
  run_once: true
  when: k8s_istio_version is undefined

- debug: msg="install istio version -> {{ k8s_istio_version }}"
  run_once: true

- name: set k8s_cluster_cidr default for Canal CNI
  set_fact:
    k8s_cluster_cidr: 10.244.0.0/16
  run_once: true
  when: k8s_cluster_cidr is undefined and k8s_network_cni == "canal"

- name: set k8s_cluster_cidr default for Calico CNI
  set_fact:
    k8s_cluster_cidr: 192.168.0.0/16
  run_once: true
  when: k8s_cluster_cidr is undefined and (k8s_network_cni == "calico" or k8s_network_cni == "calico-policy")

- debug: msg="{{ k8s_cluster_cidr }}"
  run_once: true

- name: set k8s_calico_version default
  set_fact:
    k8s_calico_version: "v3.4"
  run_once: true
  when: k8s_calico_version is undefined

- debug: msg="{{ k8s_calico_version }}"
  run_once: true

- name: set k8s_ingress_controller default for NGINX
  set_fact:
    k8s_ingress_controller: nginx
  run_once: true
  when: k8s_ingress_controller is undefined

- debug: msg="{{ k8s_ingress_controller }}"
  run_once: true

- name: set k8s_istio_wait_min default
  set_fact:
    k8s_istio_wait_min: 7
  run_once: true
  when: k8s_istio_wait_min is undefined

- debug: msg="k8s_istio_wait_min -> {{ k8s_istio_wait_min }}"
  run_once: true

- name: set k8s_calico_node_wait_min default
  set_fact:
    k8s_calico_node_wait_min: 3
  run_once: true
  when: k8s_calico_node_wait_min is undefined

- debug: msg="k8s_calico_node_wait_min -> {{ k8s_calico_node_wait_min }}"
  run_once: true

- name: set k8s_calico_policy_wait_min default
  set_fact:
    k8s_calico_policy_wait_min: 5
  run_once: true
  when: k8s_calico_policy_wait_min is undefined

- debug: msg="k8s_calico_policy_wait_min -> {{ k8s_calico_policy_wait_min }}"
  run_once: true

- name: set k8s_worker_wait_min default
  set_fact:
    k8s_worker_wait_min: 5
  run_once: true
  when: k8s_worker_wait_min is undefined

- debug: msg="k8s_worker_wait_min -> {{ k8s_worker_wait_min }}"
  run_once: true

- name: set k8s_knative_wait_min default
  set_fact:
    k8s_knative_wait_min: 7
  run_once: true
  when: k8s_knative_wait_min is undefined

- debug: msg="k8s_knative_wait_min -> {{ k8s_knative_wait_min }}"
  run_once: true

- name: set k8s_cni_wait_min default
  set_fact:
    k8s_cni_wait_min: 5
  run_once: true
  when: k8s_cni_wait_min is undefined and k8s_network_cni == "canal"

- debug: msg="k8s_cni_wait_min -> {{ k8s_cni_wait_min }}"
  run_once: true
  when: k8s_cni_wait_min is undefined and k8s_network_cni == "canal"

- name: set k8s_cni_wait_min default
  set_fact:
    k8s_cni_wait_min: 7
  run_once: true
  when: k8s_cni_wait_min is undefined and k8s_network_cni != "canal"

- debug: msg="k8s_cni_wait_min -> {{ k8s_cni_wait_min }}"
  run_once: true
  when: k8s_cni_wait_min is undefined and k8s_network_cni != "canal"

- name: set k8s_workloads_on_master default
  set_fact:
    k8s_workloads_on_master: false
  run_once: true
  when: k8s_workloads_on_master is undefined

- debug: msg="k8s_workloads_on_master -> {{ k8s_workloads_on_master }}"
  run_once: true

- name: set k8s_coredns_loop_check_disable default
  set_fact:
    k8s_coredns_loop_check_disable: "true"
  run_once: true
  when: k8s_coredns_loop_check_disable is undefined

- debug: msg="{{ k8s_coredns_loop_check_disable }}"
  run_once: true

---
- file:
    path: /etc/certs/docker
    state: directory
    mode: 0755
  when: "inventory_hostname in groups['docker_swarm_manager']"

- name: generate CA private key
  shell: openssl genrsa -out ca-key.pem 4096 
  args:
    chdir: /etc/certs/docker
  when: "inventory_hostname == groups['docker_swarm_manager'][0]"

- name: using the CN value
  debug: msg="{{ docker_swarm_mgmt_cn }}"

- name: generate CA public key
  shell: openssl req -new -subj "/C=CA/ST=Alberta/L=Calgary/O=Dev/CN={{ docker_swarm_mgmt_cn }}" -x509 -days 365 -nodes -key ca-key.pem -sha256 -out ca.pem
  args:
    chdir: /etc/certs/docker
  when: "inventory_hostname == groups['docker_swarm_manager'][0]"

- name: generate Server private key
  shell: openssl genrsa -out server-key.pem 4096
  args:
    chdir: /etc/certs/docker
  when: "inventory_hostname == groups['docker_swarm_manager'][0]"

- name: generate Server public key
  shell: openssl req -subj "/CN={{ docker_swarm_mgmt_cn }}" -sha256 -new -key server-key.pem -out server.csr
  args:
    chdir: /etc/certs/docker
  when: "inventory_hostname == groups['docker_swarm_manager'][0]"

- name: generate Server extfile
  shell: echo subjectAltName = DNS:{{ docker_swarm_mgmt_cn }},IP:{{ ansible_host }},IP:127.0.0.1 > extfile.cnf
  args:
    chdir: /etc/certs/docker
  when: "inventory_hostname == groups['docker_swarm_manager'][0]"

- name: sign Server public key
  shell: openssl x509 -req -days 365 -sha256 -in server.csr -CA ca.pem -CAkey ca-key.pem -CAcreateserial -out server-cert.pem -extfile extfile.cnf
  args:
    chdir: /etc/certs/docker
  when: "inventory_hostname == groups['docker_swarm_manager'][0]"
    
- name: generate Client private key
  shell: openssl genrsa -out key.pem 4096
  args:
    chdir: /etc/certs/docker
  when: "inventory_hostname == groups['docker_swarm_manager'][0]"

- name: generate Client request
  shell: openssl req -subj '/CN=client' -new -key key.pem -out client.csr
  args:
    chdir: /etc/certs/docker
  when: "inventory_hostname == groups['docker_swarm_manager'][0]"

- name: generate Client extfile
  shell: echo extendedKeyUsage = clientAuth > client-extfile.cnf
  args:
    chdir: /etc/certs/docker
  when: "inventory_hostname == groups['docker_swarm_manager'][0]"

- name: sign Client private key
  shell: openssl x509 -req -days 365 -sha256 -in client.csr -CA ca.pem -CAkey ca-key.pem -CAcreateserial -out cert.pem -extfile client-extfile.cnf
  args:
    chdir: /etc/certs/docker
  when: "inventory_hostname == groups['docker_swarm_manager'][0]"

- name: Clean csrs
  file:
    state: absent
    path: "/etc/certs/docker/*.csr"
  when: "inventory_hostname == groups['docker_swarm_manager'][0]"

- name: restrict the keys
  file:
    state: file
    mode: 0400
    path: "/etc/certs/docker/{{ item }}.pem"
  with_items:
    - "ca-key"
    - "server-key"
    - "key"      
  when: "inventory_hostname == groups['docker_swarm_manager'][0]"

- name: restrict the certs
  file:
    state: file
    mode: 0444
    path: "/etc/certs/docker/{{ item }}.pem"
  with_items:
    - "ca"
    - "server-cert"    
    - "cert"   
  when: "inventory_hostname == groups['docker_swarm_manager'][0]"

- name: Copy the custom docker.service
  template:
    src: templates/docker-service.j2
    dest: /etc/systemd/system/docker.service
    mode: 0644
  when: "inventory_hostname == groups['docker_swarm_manager'][0]"

- name: Restart the docker daemon
  service:
    name: docker
    state: restarted
    enabled: yes  
  when: "inventory_hostname == groups['docker_swarm_manager'][0]"

- name: Fetch the client certs
  fetch:
    src: /etc/certs/docker/{{ item }}.pem
    dest: ../clusters/{{ cluster_pkg_folder }}/api-certs/
    flat: yes        
  with_items:
    - ca-key
    - ca
    - key    
    - cert
    - server-key
    - server-cert                    
  when: "inventory_hostname == groups['docker_swarm_manager'][0]"
            
- name: Copy up the shared manager certs and keys to other manager nodes
  copy:
    src: "../clusters/{{ cluster_pkg_folder }}/api-certs/{{ item }}.pem"
    dest: "/etc/certs/docker/{{ item }}.pem"
  with_items:
    - ca-key
    - ca
    - key    
    - cert
    - server-key
    - server-cert                    
  when: "inventory_hostname in groups['docker_swarm_manager'] 
    and inventory_hostname != groups['docker_swarm_manager'][0]"
            
- name: Remove local temp server related pem files
  local_action:
    module: file
    path: "../clusters/{{ cluster_pkg_folder }}/api-certs/{{ item }}.pem"
    state: absent
  with_items:
    - ca-key
    - server-key
    - server-cert                    
  when: "inventory_hostname == groups['docker_swarm_manager'][0]"
  run_once: true

- name: restrict the keys
  file:
    state: file
    mode: 0400
    path: "/etc/certs/docker/{{ item }}.pem"
  with_items:
    - "ca-key"
    - "server-key"
    - "key"      
  when: "inventory_hostname in groups['docker_swarm_manager'] 
    and inventory_hostname != groups['docker_swarm_manager'][0]"

- name: restrict the certs
  file:
    state: file
    mode: 0444
    path: "/etc/certs/docker/{{ item }}.pem"
  with_items:
    - "ca"
    - "server-cert"    
    - "cert"   
  when: "inventory_hostname in groups['docker_swarm_manager'] 
    and inventory_hostname != groups['docker_swarm_manager'][0]"

- name: Copy the custom docker.service
  template:
    src: templates/docker-service.j2
    dest: /etc/systemd/system/docker.service
    mode: 0644
  when: "inventory_hostname in groups['docker_swarm_manager'] 
    and inventory_hostname != groups['docker_swarm_manager'][0]"

- name: Restart the docker daemon
  service:
    name: docker
    state: restarted
    enabled: yes  
  when: "inventory_hostname in groups['docker_swarm_manager'] 
    and inventory_hostname != groups['docker_swarm_manager'][0]"
            
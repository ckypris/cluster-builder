  - name: Verify NFS Shares file
    local_action:
      module: stat
      path: "../clusters/{{ cluster_name }}/nfs_shares.yml"
    register: nfs_shares_config
    run_once: true
    become: false
  
  - name: Load NFS Shares file
    include_vars:
      file: "../clusters/{{ cluster_name }}/nfs_shares.yml"
    run_once: true
    when: nfs_shares_config.stat.exists == True

  - name: Load empty nfs_shares
    include_vars:
      file: "nfs-shares-empty.yml"
    run_once: true
    when: nfs_shares_config.stat.exists == False

  - debug: msg="{{ nfs_shares }}"
    when: nfs_shares_config.stat.exists == True
    run_once: true

  - name: Ensure the NFS mounts exist
    file:
      path: "{{ item.folder }}"
      state: directory
    when: "item.folder is defined and (item.group is undefined or item.group in group_names)"
    with_items: 
      - "{{ nfs_shares }}"

  - name: Create fstab entry for shared storage and backup volumes
    lineinfile:
      path: "/etc/fstab"
      state: present
      line: "{{ item.fstab }}"
    when: "item.fstab is defined and (item.group is undefined or item.group in group_names)"
    with_items: 
      - "{{ nfs_shares }}"

  - name: Unmount the volumes
    shell: umount {{ item.folder }}
    when: "item.folder is defined and (item.group is undefined or item.group in group_names)"
    ignore_errors: true
    with_items: 
      - "{{ nfs_shares }}"
    
  - name: Mount the volumes
    shell: mount {{ item.folder }}
    when: "item.folder is defined and (item.group is undefined or item.group in group_names)"
    with_items: 
      - "{{ nfs_shares }}"

  - name: List the volume
    shell: ls -al "{{ item.folder }}"
    register: local_out
    when: "item.folder is defined and (item.group is undefined or item.group in group_names)"
    with_items: 
      - "{{ nfs_shares }}"

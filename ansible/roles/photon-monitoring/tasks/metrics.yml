---
- name: Configure the docker daemon.json 
  template:
    src: templates/docker_daemon_jsonfile.j2
    dest: /etc/docker/daemon.json
    mode: 0755
  when: "docker_enable_metrics is defined and docker_enable_metrics"

- name: Create prometheus etc
  file:
    path: /etc/prometheus
    state: directory
    mode: 0755
  when: "groups['docker_prometheus_server'] is defined and inventory_hostname in groups['docker_prometheus_server']"

- name: Create and install the prometheus configuration file
  template:
    src: templates/prometheus.j2
    dest: /etc/prometheus/prometheus.yml
    mode: 0755
  when: "groups['docker_prometheus_server'] is defined and inventory_hostname in groups['docker_prometheus_server']"

- name: Create prometheus host data volume
  file:
    path: /data/prometheus
    state: directory
    mode: 0755
  when: "groups['docker_prometheus_server'] is defined and inventory_hostname in groups['docker_prometheus_server']"

- name: Install prometheus 
  shell: 
    cmd: | 
      docker service create --replicas 1 --name monitor-prometheus \
      --limit-cpu 1 \
      --reserve-cpu 0.5 \
      --limit-memory 1073741824 \
      --reserve-memory 512m \
      --constraint "node.role == manager" \
      --mount type=bind,source=/etc/hosts,destination=/etc/hosts \
      --mount type=bind,source=/etc/prometheus/prometheus.yml,destination=/etc/prometheus/prometheus.yml \
      --mount source=prometheus-data,destination=/prometheus \
      --publish 9090:9090/tcp \
      prom/prometheus
  when: "groups['docker_prometheus_server'] is defined and inventory_hostname in groups['docker_prometheus_server']"

- name: Stop cadvisor on all nodes 
  shell: docker stop cadvisor
  when: "docker_enable_metrics is defined and docker_enable_metrics"
  ignore_errors: true

- name: Remove cadvisor on all nodes 
  shell: docker rm cadvisor
  when: "docker_enable_metrics is defined and docker_enable_metrics"
  ignore_errors: true

- name: Install cadvisor on all nodes 
  shell: 
    cmd: | 
      docker service create --mode global --name monitor-cadvisor \
        --limit-cpu 0.5 \
        --reserve-cpu 0.3 \
        --limit-memory 536870912 \
        --reserve-memory 134217728 \
        --mount type=bind,source=/proc,destination=/host/proc,readonly \
        --mount type=bind,source=/sys,destination=/host/sys,readonly \
        --mount type=bind,source=/,destination=/rootfs,readonly \
        --mount type=bind,source=/var/run,destination=/var/run,readonly \
        --mount type=bind,source=/var/lib/docker,destination=/var/lib/docker,readonly \
        --mount type=bind,source=/dev/disk,destination=/dev/disk,readonly \
        --publish mode=host,target=8080,published=9101 \
        --container-label com.docker.stack.namespace=monitor \
        google/cadvisor:latest
  when: "docker_enable_metrics is defined and docker_enable_metrics and inventory_hostname == groups['docker_swarm_manager'][0]"
  run_once: true

- name: Create grafana host data volume
  file:
    path: /data/grafana
    state: directory
    mode: 0755
  when: "groups['docker_prometheus_server'] is defined and inventory_hostname in groups['docker_prometheus_server']"

- name: Install grafana 
  shell: 
    cmd: | 
      docker service create --replicas 1 --name monitor-grafana \
      --limit-cpu 1 \
      --reserve-cpu 0.5 \
      --limit-memory 1073741824 \
      --reserve-memory 536870912 \
      --constraint "node.role == manager" \
      --mount type=bind,source=/etc/hosts,destination=/etc/hosts \
      --mount type=bind,source=/data/grafana,destination=/var/lib/grafana \
      --publish 3000:3000/tcp \
      -e GF_SECURITY_ADMIN_PASSWORD=pass \
      grafana/grafana:latest
  when: "groups['docker_prometheus_server'] is defined and inventory_hostname in groups['docker_prometheus_server']"

- name: Restart the docker daemons with monitoring configuration
  service:
    name: docker
    state: restarted
    enabled: yes  
  when: "docker_enable_metrics is defined and docker_enable_metrics"

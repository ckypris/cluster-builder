
- name: clean up old Knative service 
  shell: "kubectl delete svc knative-ingressgateway -n istio-system"
  become: true
  ignore_errors: true
  register: del_svc_out
  when: inventory_hostname == groups['k8s_masters'][0]

- debug: msg="{{ del_svc_out.stdout_lines }}"
  when: inventory_hostname == groups['k8s_masters'][0]

- name: clean up old Knative deployment 
  shell: "kubectl delete deploy knative-ingressgateway -n istio-system"
  become: true
  ignore_errors: true
  register: del_dep_out
  when: inventory_hostname == groups['k8s_masters'][0]

- debug: msg="{{ del_dep_out.stdout_lines }}"
  when: inventory_hostname == groups['k8s_masters'][0]

- name: clean up old Knative stateful set 
  shell: " kubectl delete statefulset/controller-manager -n knative-sources"
  become: true
  ignore_errors: true
  register: del_state_out
  when: inventory_hostname == groups['k8s_masters'][0]

- debug: msg="{{ del_state_out.stdout_lines }}"
  when: inventory_hostname == groups['k8s_masters'][0]

- name: install Knative 0.10.0 CRDs
  shell: "kubectl apply --selector knative.dev/crd-install=true --filename https://github.com/knative/serving/releases/download/v0.10.0/serving.yaml --filename https://github.com/knative/eventing/releases/download/v0.10.0/release.yaml --filename https://github.com/knative/serving/releases/download/v0.10.0/monitoring.yaml"
  become: true
  register: knative_crds_out
  when: inventory_hostname == groups['k8s_masters'][0]

- debug: msg="{{ knative_crds_out.stdout_lines }}"
  when: inventory_hostname == groups['k8s_masters'][0]

- name: wait for Knative CRDs to settle in
  pause:
    seconds: 15

- name: install Knative 0.10.0
  shell: "kubectl apply --filename https://github.com/knative/serving/releases/download/v0.10.0/serving.yaml --filename https://github.com/knative/eventing/releases/download/v0.10.0/release.yaml --filename https://github.com/knative/serving/releases/download/v0.10.0/monitoring.yaml"
  become: true
  register: knative_out
  when: inventory_hostname == groups['k8s_masters'][0]

- debug: msg="{{ knative_out.stdout_lines }}"
  when: inventory_hostname == groups['k8s_masters'][0]

- name: give the Knative deployment a few seconds to spin up
  pause:
    seconds: 30
  when: inventory_hostname == groups['k8s_masters'][0]

- name: wait for the Knative 0.10.0 deployment to complete
  shell: "kubectl get pods --all-namespaces | grep -E 'Pending|ContainerCreating|PodInitializing' | wc -l  | xargs"
  become: true
  register: pending_pods
  until: "pending_pods.stdout == '0'"
  retries: 100
  delay: 10    
  when: inventory_hostname == groups['k8s_masters'][0]


- name: set k8s_version default
  set_fact:
    k8s_version: 1.14.*
  run_once: true
  when: k8s_version is undefined

- debug: msg="{{ k8s_version }}"
  run_once: true

- name: set k8s_docker_version default
  set_fact:
    k8s_docker_version: distro
  run_once: true
  when: k8s_docker_version is undefined and cluster_type == 'centos-k8s'

- name: set k8s_docker_version default
  set_fact:
    k8s_docker_version: 18.09.*
  run_once: true
  when: k8s_docker_version is undefined and cluster_type == 'fedora-k8s'

- debug: msg="{{ k8s_docker_version }}"
  run_once: true

- name: set k8s_semantic_version default for 1.15
  set_fact:
    k8s_semantic_version: 1.15.0
  run_once: true
  when: k8s_version == "1.15.*"

- name: set k8s_semantic_version default for 1.14
  set_fact:
    k8s_semantic_version: 1.14.1
  run_once: true
  when: k8s_version == "1.14.*"

- name: set k8s_semantic_version default for 1.13
  set_fact:
    k8s_semantic_version: 1.13.5
  run_once: true
  when: k8s_version == "1.13.*"

- name: set k8s_semantic_version default
  set_fact:
    k8s_semantic_version: 1.13.5
  run_once: true
  when: k8s_semantic_version is undefined

- debug: msg="{{ k8s_semantic_version }}"
  run_once: true

- name: set k8s_network_cni default
  set_fact:
    k8s_network_cni: "canal"
  run_once: true
  when: k8s_network_cni is undefined

- debug: msg="{{ k8s_network_cni }}"
  run_once: true

- name: set k8s_cluster_cidr default for Canal CNI
  set_fact:
    k8s_cluster_cidr: 10.244.0.0/16
  run_once: true
  when: k8s_cluster_cidr is undefined and k8s_network_cni == "canal"

- name: set k8s_cluster_cidr default for Calico CNI
  set_fact:
    k8s_cluster_cidr: 192.168.0.0/16
  run_once: true
  when: k8s_cluster_cidr is undefined and (k8s_network_cni == "calico" or k8s_network_cni == "calico-policy")

- debug: msg="{{ k8s_cluster_cidr }}"
  run_once: true

- name: set k8s_calico_version default
  set_fact:
    k8s_calico_version: "v3.8"
  run_once: true
  when: k8s_calico_version is undefined

- debug: msg="{{ k8s_calico_version }}"
  run_once: true

- name: set k8s_ingress_controller default for NGINX
  set_fact:
    k8s_ingress_controller: nginx
  run_once: true
  when: k8s_ingress_controller is undefined

- debug: msg="{{ k8s_ingress_controller }}"
  run_once: true

- name: set k8s_calico_node_wait_min default
  set_fact:
    k8s_calico_node_wait_min: 3
  run_once: true
  when: k8s_calico_node_wait_min is undefined

- debug: msg="k8s_calico_node_wait_min -> {{ k8s_calico_node_wait_min }}"
  run_once: true

- name: set k8s_calico_policy_wait_min default
  set_fact:
    k8s_calico_policy_wait_min: 5
  run_once: true
  when: k8s_calico_policy_wait_min is undefined

- debug: msg="k8s_calico_policy_wait_min -> {{ k8s_calico_policy_wait_min }}"
  run_once: true

- name: set k8s_worker_wait_min default
  set_fact:
    k8s_worker_wait_min: 1
  run_once: true
  when: k8s_worker_wait_min is undefined

- debug: msg="k8s_worker_wait_min -> {{ k8s_worker_wait_min }}"
  run_once: true

- name: set k8s_knative_wait_min default
  set_fact:
    k8s_knative_wait_min: 5
  run_once: true
  when: k8s_knative_wait_min is undefined

- debug: msg="k8s_knative_wait_min -> {{ k8s_knative_wait_min }}"
  run_once: true

- name: set k8s_cni_wait_min default
  set_fact:
    k8s_cni_wait_min: 5
  run_once: true
  when: k8s_cni_wait_min is undefined and k8s_network_cni == "canal"

- debug: msg="k8s_cni_wait_min -> {{ k8s_cni_wait_min }}"
  run_once: true
  when: k8s_cni_wait_min is undefined and k8s_network_cni == "canal"

- name: set k8s_cni_wait_min default
  set_fact:
    k8s_cni_wait_min: 7
  run_once: true
  when: k8s_cni_wait_min is undefined and k8s_network_cni != "canal"

- debug: msg="k8s_cni_wait_min -> {{ k8s_cni_wait_min }}"
  run_once: true
  when: k8s_cni_wait_min is undefined and k8s_network_cni != "canal"

- name: set k8s_workloads_on_master default
  set_fact:
    k8s_workloads_on_master: false
  run_once: true
  when: k8s_workloads_on_master is undefined

- debug: msg="k8s_workloads_on_master -> {{ k8s_workloads_on_master }}"
  run_once: true

- name: set k8s_coredns_loop_check_disable default
  set_fact:
    k8s_coredns_loop_check_disable: false
  run_once: true
  when: k8s_coredns_loop_check_disable is undefined

- debug: msg="{{ k8s_coredns_loop_check_disable }}"
  run_once: true

- name: set k8s_firewalld_enabled default
  set_fact:
    k8s_firewalld_enabled: true
  run_once: true
  when: k8s_firewalld_enabled is undefined

- debug: msg="{{ k8s_firewalld_enabled }}"
  run_once: true


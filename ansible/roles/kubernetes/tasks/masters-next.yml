- name: ensure pki folder exists
  shell: mkdir -p /etc/kubernetes/pki/

- name: copy the PKI keys to the other masters
  copy:
    dest: /etc/kubernetes/pki/{{ item }}
    src: "{{ playbook_dir | replace('/ansible', '') }}/clusters/{{ cluster_pkg_folder }}/pki/{{ item }}"
    mode: 600
  become: true   
  with_items:
    - sa.key
    - apiserver.key  
    - apiserver-kubelet-client.key  
    - ca.key  
    - front-proxy-ca.key  
    - front-proxy-client.key  
    - sa.pub
  when: k8s_version is search("1.13")

- name: copy the PKI certs to the other masters
  copy:
    dest: /etc/kubernetes/pki/{{ item }}
    src: "{{ playbook_dir | replace('/ansible', '') }}/clusters/{{ cluster_pkg_folder }}/pki/{{ item }}"
    mode: 644
  become: true   
  with_items:
    - apiserver.crt  
    - apiserver-kubelet-client.crt  
    - ca.crt  
    - front-proxy-ca.crt  
    - front-proxy-client.crt  
  when: k8s_version is search("1.13")

- name: generate the kubeadm 1.13 yaml configuration
  template:
    src: templates/k8s-kube-adm-13.j2
    dest: /root/kube-adm.yml
  when: k8s_version is search("1.13")

- name: join other master pre 1.14
  shell: "kubeadm init --config kube-adm.yml > /tmp/kube-status"
  args:
    chdir: /root
  ignore_errors: false
  register: master_join
  when: k8s_version is search("1.13") 

- name: master join result
  debug: msg="{{ master_join.stdout_lines }}"
  when: k8s_version is search("1.13")

- name: copy the master_join_cmd to the other masters
  copy:
    dest: /root/master_join_cmd
    src: ../clusters/{{ cluster_pkg_folder }}/master_join_cmd
  become: true   
  when: k8s_version is search("1.14")

- name: join other master to cluster
  shell: "/root/master_join_cmd"
  register: master_join
  when: k8s_version is search("1.14")

- name: master join result
  debug: msg="{{ master_join.stdout_lines }}"
  when: k8s_version is search("1.14")

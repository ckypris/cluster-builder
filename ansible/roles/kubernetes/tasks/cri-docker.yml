- name: remove any updated docker-ce if it exists on CentOS 7
  command: yum -y remove docker-ce docker-ce-cli containerd.io
  args:
    warn: false
  when: cluster_type == "centos-k8s" and k8s_docker_version == 'distro'

- name: install base distro docker on CentOS 7
  command: yum -y install docker
  when: cluster_type == "centos-k8s" and k8s_docker_version == 'distro'
  retries: 10
  delay: 10
  register: result
  until: result.rc is defined and result.rc == 0

- name: remove any updated docker-ce if it exists on Fedora or CentOS 8
  dnf:
    name: docker-ce
    state: absent
  when: (cluster_type == "fedora-k8s" or cluster_type == "centos8-k8s") and k8s_docker_version == 'distro'

- name: remove any updated docker-ce-cli if it exists on Fedora or CentOS 8
  dnf:
    name: docker-ce-cli
    state: absent
  when: (cluster_type == "fedora-k8s" or cluster_type == "centos8-k8s") and k8s_docker_version == 'distro'

- name: remove any updated containerd if it exists on Fedora or CentOS 8
  dnf:
    name: containerd.io
    state: absent
  when: (cluster_type == "fedora-k8s" or cluster_type == "centos8-k8s") and k8s_docker_version == 'distro'

- name: install base distro docker for Fedora or CentOS 8
  shell: "dnf install -y docker"
  args:
    warn: false
  when: (cluster_type == "fedora-k8s" or cluster_type == "centos8-k8s") and k8s_docker_version == 'distro'
  retries: 10
  delay: 10
  register: result
  until: result.rc is defined and result.rc == 0

- name: remove any updated docker-ce if it exists on Ubuntu
  command: apt-get -y remove docker docker-engine docker.io containerd runc
  args:
    warn: false
  when: cluster_type == "ubuntu-k8s" and k8s_docker_version == 'distro'

- name: install base distro docker on Ubuntu
  command: apt-get -y install docker.io gnupg-agent apt-transport-https ca-certificates curl software-properties-common
  args:
    warn: false
  when: cluster_type == "ubuntu-k8s" and k8s_docker_version == 'distro'
  retries: 10
  delay: 10
  register: result
  until: result.rc is defined and result.rc == 0

- name: re-configure the /etc/sysconfig/docker (where applicable)
  lineinfile:
    path: /etc/sysconfig/docker
    regexp: "^%OPTIONS='--selinux-enabled --log-driver=journald"
    line: "OPTIONS='--selinux-enabled --signature-verification=false'"
  when: k8s_docker_version == 'distro'
  ignore_errors: true

- name: register docker repo on CentOS 7
  command: "yum-config-manager --add-repo https://download.docker.com/linux/centos/docker-ce.repo"
  args:
    warn: false
  when: cluster_type == "centos-k8s"  and k8s_docker_version != 'distro'

- name: install docker dependencies on CentOS 7
  command: "yum install -y yum-utils device-mapper-persistent-data lvm2"
  args:
    warn: false
  when: cluster_type == "centos-k8s" and k8s_docker_version != 'distro'

- name: purge distro docker on CentOS 7
  command: "yum remove -y docker docker-client docker-client-latest docker-common docker-latest docker-latest-logrotate docker-logrotate docker-selinux docker-engine-selinux docker-engine"
  args:
    warn: false
  ignore_errors: true
  when: cluster_type == "centos-k8s" and k8s_docker_version != 'distro'

- name: install docker-ce and friends on CentOS 7
  shell: "yum -y install docker-ce-{{ k8s_docker_version }} docker-ce-cli-{{ k8s_docker_version }} containerd.io"
  args:
    warn: false
  when: cluster_type == "centos-k8s" and k8s_docker_version != 'distro'
  retries: 10
  delay: 10
  register: result
  until: result.rc is defined and result.rc == 0

- name: register docker repo on Fedora
  command: "dnf config-manager --add-repo https://download.docker.com/linux/fedora/docker-ce.repo"
  args:
    warn: false
  when: cluster_type == "fedora-k8s" and k8s_docker_version != 'distro'

- name: purge distro docker on Fedora
  command: "dnf -y remove docker docker-client docker-client-latest docker-common docker-latest docker-latest-logrotate docker-logrotate docker-selinux docker-engine-selinux docker-engine"
  args:
    warn: false
  ignore_errors: true
  when: cluster_type == "fedora-k8s" and k8s_docker_version != 'distro'

- name: install docker-ce and friends on Fedora
  shell: "dnf -y install docker-ce-{{ k8s_docker_version }} docker-ce-cli-{{ k8s_docker_version }} containerd.io"
  args:
    warn: false
  when: cluster_type == "fedora-k8s" and k8s_docker_version != 'distro'
  retries: 10
  delay: 10
  register: result
  until: result.rc is defined and result.rc == 0

- name: register docker repo on CentOS 8
  command: "dnf config-manager --add-repo https://download.docker.com/linux/centos/docker-ce.repo"
  when: cluster_type == "centos8-k8s" and k8s_docker_version != 'distro'

- name: purge distro docker on CentOS 8
  command: "dnf -y remove docker docker-client docker-client-latest docker-common docker-latest docker-latest-logrotate docker-logrotate docker-selinux docker-engine-selinux docker-engine"
  ignore_errors: true
  when: cluster_type == "centos8-k8s" and k8s_docker_version != 'distro'

- name: install docker-ce and friends on CentOS 8
  shell: "dnf -y install --nobest docker-ce docker-ce-cli containerd.io"
  args:
    warn: false
  when: cluster_type == "centos8-k8s" and k8s_docker_version != 'distro'

- name: install docker repo dependencies
  shell: "apt-get -y install apt-transport-https ca-certificates curl software-properties-common"
  args:
    warn: false
  when: cluster_type == "ubuntu-k8s"  and k8s_docker_version != 'distro'

- name: install docker repo key on Ubuntu
  shell: "curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -"
  args:
    warn: false
  when: cluster_type == "ubuntu-k8s"  and k8s_docker_version != 'distro'

- name: register docker repo on Ubuntu
  command: 'add-apt-repository "deb [arch=amd64] https://download.docker.com/linux/ubuntu bionic stable"'
  args:
    warn: false
  when: cluster_type == "ubuntu-k8s"  and k8s_docker_version != 'distro'

- name: update repo metadata on Ubuntu
  command: apt-get update
  args:
    warn: false
  when: cluster_type == "ubuntu-k8s"  and k8s_docker_version != 'distro'

- name: purge distro docker on Ubuntu
  command: "apt-get -y remove docker docker-engine docker.io containerd runc"
  args:
    warn: false
  ignore_errors: true
  when: cluster_type == "ubuntu-k8s" and k8s_docker_version != 'distro'

- name: install docker-ce and friends on Ubuntu
  shell: "apt-get -y install docker-ce={{ k8s_docker_version }} docker-ce-cli={{ k8s_docker_version }} containerd.io"
  args:
    warn: false
  when: cluster_type == "ubuntu-k8s" and k8s_docker_version != 'distro'
  retries: 10
  delay: 10
  register: result
  until: result.rc is defined and result.rc == 0

- name: prep /etc/docker 
  shell: "mkdir /etc/docker"
  when: (cluster_type == "centos8-k8s" and k8s_docker_version != 'distro') 

- name: configure the default k8s docker daemon.json with json-file logging
  template:
    src: templates/k8s-docker-daemon.j2
    dest: /etc/docker/daemon.json
  when: (cluster_type == "centos8-k8s" and k8s_docker_version != 'distro') or cluster_type != "centos8-k8s"

- name: start docker daemon
  service:
    name: docker
    state: started
    enabled: yes
  when: (cluster_type == "centos8-k8s" and k8s_docker_version != 'distro') or cluster_type != "centos8-k8s"

- name: show docker info 
  command: "docker info"
  register: docker_info

- debug: msg="{{ docker_info.stdout_lines }}"

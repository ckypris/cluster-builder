- name: install Istio
  include: "istio-{{ k8s_istio_version }}.yml"

- name: install Calico Istio injection configmap manifest
  shell: "kubectl apply -f https://docs.projectcalico.org/{{ k8s_calico_version }}/getting-started/kubernetes/installation/manifests/app-layer-policy/istio-inject-configmap.yaml"
  register: calico_istio_out
  when: k8s_network_cni == 'calico-policy'

- debug: msg="{{ calico_istio_out.stdout_lines }}"
  when: k8s_network_cni == 'calico-policy'

- name: install Calico service mesh manifest
  shell: "kubectl apply -f https://docs.projectcalico.org/{{ k8s_calico_version }}/getting-started/kubernetes/installation/manifests/app-layer-policy/istio-app-layer-policy.yaml"
  register: calico_mesh_out
  when: k8s_network_cni == 'calico-policy'

- debug: msg="{{ calico_mesh_out.stdout_lines }}"
  when: k8s_network_cni == 'calico-policy'

- name: give the Istio deployments a few seconds to spin up
  pause:
    seconds: 30

- name: wait for the enormous Istio installation to complete
  shell: "kubectl get pods --all-namespaces | grep -E 'Pending|ContainerCreating|PodInitializing' | wc -l"
  register: pending_pods
  until: "pending_pods.stdout == '0'"
  retries: 100
  delay: 10    
  when: inventory_hostname == groups['k8s_masters'][0]

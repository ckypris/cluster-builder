- name: Check that the secrets.conf exists
  stat:
    path: /etc/kubernetes/pki/secrets.conf
  register: stat_result

- name: adjust kubernetes api server configuration for encryption
  lineinfile:
    dest: /etc/kubernetes/pki/secrets.conf
    insertafter: "    providers:"
    line: "    - identity: {}"
    state: present
  become: true
  when: k8s_version is not search("1.12") and
    stat_result.stat.exists == True 

- name: restart the api server 
  shell: kubectl delete -f /etc/kubernetes/manifests/kube-apiserver.yaml
  become: true
  register: update_api_out
  when: stat_result.stat.exists == True 

- debug: msg="{{ update_api_out.stdout_lines }}"
  when: stat_result.stat.exists == True 

- name: restart the api server 
  shell: kubectl apply -f /etc/kubernetes/manifests/kube-apiserver.yaml
  become: true
  register: update_api_out
  when: stat_result.stat.exists == True 

- debug: msg="{{ update_api_out.stdout_lines }}"
  when: stat_result.stat.exists == True 

- name: wait for the api server to restart
  pause:
    seconds: 15
  when: stat_result.stat.exists == True 

- name: validate the api is live again 
  shell: kubectl get nodes
  become: true
  register: update_api_out
  when: stat_result.stat.exists == True 

- debug: msg="{{ update_api_out.stdout_lines }}"
  when: stat_result.stat.exists == True 

- name: update all the secrets 
  shell: kubectl get secrets --all-namespaces -o json | kubectl replace -f -
  become: true
  register: update_secrets_out
  when: stat_result.stat.exists == True 

- debug: msg="{{ update_secrets_out.stdout_lines }}"
  when: stat_result.stat.exists == True 

---
- name: Configure the docker daemon.json file for gelf elk logging
  template:
    src: templates/docker_daemon_gelf.j2
    dest: /etc/docker/daemon.json
  when: "docker_elk_target is defined"

- name: Create elasticsearch host data volume
  file:
    path: /data/elasticsearch
    state: directory
    mode: 0755
  when: "groups['docker_elk_server'] is defined and inventory_hostname in groups['docker_elk_server']"

- name: Create monitoring network...
  shell: docker network create --driver overlay --subnet 10.0.2.0/24 monitor_network
  when: "docker_elk_target is defined and inventory_hostname in groups['docker_swarm_manager']"
  ignore_errors: true
  run_once: true

- name: Install elasticsearch 
  shell: 
    cmd: | 
      docker service create --replicas 1 --name monitor-elasticsearch \
      --limit-cpu 2 \
      --reserve-cpu 1 \
      --limit-memory 2147483648 \
      --reserve-memory 1073741824 \
      --network monitor_network \
      --constraint "node.role == manager" \
      --mount type=bind,source=/data/elasticsearch,destination=/usr/share/elasticsearch/data \
      --publish 9200:9200/tcp \
      elasticsearch:latest
  when: "groups['docker_elk_server'] is defined and inventory_hostname in groups['docker_elk_server']"

- name: Install kibana 
  shell: 
    cmd: | 
      docker service create --replicas 1 --name monitor-kibana \
      --limit-cpu 0.5 \
      --reserve-cpu 0.3 \
      --limit-memory 536870912 \
      --reserve-memory 268435456 \
      --network monitor_network \
      --constraint "node.role == manager" \
      -e 'ELASTICSEARCH_URL=http://monitor-elasticsearch:9200' \
      --publish 5601:5601/tcp \
      kibana:latest
  when: "groups['docker_elk_server'] is defined and inventory_hostname in groups['docker_elk_server']"

- name: Install logstash on all nodes (service mode is global)
  shell: 
    cmd: | 
      docker service create --mode global --name monitor-logstash \
      --limit-cpu 0.5 \
      --reserve-cpu 0.3 \
      --limit-memory 536870912 \
      --reserve-memory 268435456 \
      --network monitor_network \
      --publish 8082:8082 \
      --publish 12201:12201/udp \
      --log-driver="json-file" \
      logstash:latest \
      -e "input { gelf {} } output { elasticsearch { hosts => ['{{ docker_elk_target }}'] } }"
  when: "docker_elk_target is defined"
  run_once: true

- name: Restart the docker daemons with elk logging configuration
  service:
    name: docker
    state: restarted
    enabled: yes  
  when: "docker_elk_target is defined"
    
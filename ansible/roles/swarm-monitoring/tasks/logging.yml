---
- name: setup logging to external ELK system
  lineinfile:
    dest: /etc/docker/daemon.json
    regexp: "{{ item.regexp }}"
    line: "{{ item.line }}"
    state: present
    insertafter: '{'
  with_items:
    - { regexp: 'log-driver', line: '  "log-driver": "gelf",' }
  when: "docker_elk_target is defined"
 
- name: setup logging to external ELK system
  lineinfile:
    dest: /etc/docker/daemon.json
    regexp: "{{ item.regexp }}"
    line: "{{ item.line }}"
    state: present
    insertafter: '"log-driver": "gelf",'
  with_items:
    - { regexp: 'log-opts', line: '  "log-opts": { "gelf-address": "udp://127.0.0.1:12201", "labels": "container_group" },' }

- name: create elasticsearch host data volume
  file:
    path: /data/elasticsearch
    state: directory
    mode: 0755
  when: "groups['docker_elk_server'] is defined and inventory_hostname in groups['docker_elk_server']"

- name: install elasticsearch 
  shell: 
    cmd: | 
      docker service create --replicas 1 --name monitor-elasticsearch \
      --limit-cpu 2 \
      --reserve-cpu 1 \
      --limit-memory 2147483648 \
      --reserve-memory 1073741824 \
      --network bridge \
      --constraint "node.role == manager" \
      --mount type=bind,source=/data/elasticsearch,destination=/usr/share/elasticsearch/data \
      --publish 9200:9200/tcp \
      elasticsearch:latest
  when: "groups['docker_elk_server'] is defined and inventory_hostname in groups['docker_elk_server']"

- name: install kibana 
  shell: 
    cmd: | 
      docker service create --replicas 1 --name monitor-kibana \
      --limit-cpu 0.5 \
      --reserve-cpu 0.3 \
      --limit-memory 536870912 \
      --reserve-memory 268435456 \
      --network bridge \
      --constraint "node.role == manager" \
      -e 'ELASTICSEARCH_URL=http://monitor-elasticsearch:9200' \
      --publish 5601:5601/tcp \
      kibana:latest
  when: "groups['docker_elk_server'] is defined and inventory_hostname in groups['docker_elk_server']"

- name: install logstash on all nodes (service mode is global)
  shell: 
    cmd: | 
      docker service create --mode global --name monitor-logstash \
      --limit-cpu 0.5 \
      --reserve-cpu 0.3 \
      --limit-memory 536870912 \
      --reserve-memory 268435456 \
      --network bridge \
      --publish 12201:12201/udp \
      --publish 8082:8082 \
      --log-driver="json-file" \
      --detach \
      logstash:latest \
      -e "input { gelf {} } output { elasticsearch { hosts => ['{{ docker_elk_target }}'] } }"
  when: "docker_elk_target is defined"
  run_once: true

- name: restart the docker daemons with elk logging configuration
  service:
    name: docker
    state: restarted
    enabled: yes  
  when: "docker_elk_target is defined"
    
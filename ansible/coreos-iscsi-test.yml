- hosts: coreos_workers
  become: true
  any_errors_fatal: true
  gather_facts: false

  roles:
    - common

  tasks:

  - name: Add iSCSI configuration to kubelet.service file
    local_action:
      module: lineinfile
      dest: ../clusters/{{ cluster_pkg_folder }}/current-shipping-kubelet.service
      regexp: "{{ item.regx }}"
      line: "{{ item.line }}"
      state: present
      insertafter: 'Environment="RKT_RUN_ARGS='
    with_items:
      - { regx: "  --volume iscsiadm,kind=host", line: '  --volume iscsiadm,kind=host,source=/usr/sbin/iscsiadm --mount volume=iscsiadm,target=/usr/sbin/iscsiadm \' }
    become: false
    run_once: true

  - name: Add iSCSI configuration to kubelet.service file
    local_action:
      module: lineinfile
      dest: ../clusters/{{ cluster_pkg_folder }}/current-shipping-kubelet.service
      regexp: "{{ item.regx }}"
      line: "{{ item.line }}"
      state: present
      insertafter: '--volume iscsiadm'
    with_items:
      - { regx: "  --volume etc-scsi,kind=host", line: '  --volume etc-scsi,kind=host,source=/etc/iscsi/ --mount volume=etc-scsi,target=/etc/iscsi \' }
    become: false
    run_once: true

  - name: Add iSCSI configuration to kubelet.service file
    local_action:
      module: lineinfile
      dest: ../clusters/{{ cluster_pkg_folder }}/current-shipping-kubelet.service
      regexp: "{{ item.regx }}"
      line: "{{ item.line }}"
      state: present
      insertafter: '--volume etc-scsi'
    with_items:
      - { regx: "  --volume iscsid,kind=host", line: '  --volume iscsid,kind=host,source=/usr/sbin/iscsid --mount volume=iscsid,target=/usr/sbin/iscsid \' }
    become: false
    run_once: true

  - name: Add iSCSI configuration to kubelet.service file
    local_action:
      module: lineinfile
      dest: ../clusters/{{ cluster_pkg_folder }}/current-shipping-kubelet.service
      regexp: "{{ item.regx }}"
      line: "{{ item.line }}"
      state: present
      insertafter: '--volume iscsid'
    with_items:
      - { regx: "  --volume mkfsext4,kind=host", line: '  --volume mkfsext4,kind=host,source=/usr/sbin/mkfs.ext4 --mount volume=mkfsext4,target=/usr/sbin/mkfs.ext4 \' }
    become: false
    run_once: true

  - name: Add iSCSI configuration to kubelet.service file
    local_action:
      module: lineinfile
      dest: ../clusters/{{ cluster_pkg_folder }}/current-shipping-kubelet.service
      regexp: "{{ item.regx }}"
      line: "{{ item.line }}"
      state: present
      insertafter: '--volume mkfsext4'
    with_items:
      - { regx: "  --volume mkfsfat,kind=host", line: '  --volume mkfsfat,kind=host,source=/usr/sbin/mkfs.fat --mount volume=mkfsfat,target=/usr/sbin/mkfs.fat \' }
    become: false
    run_once: true

  - name: Read VM Node Initiator value for storage class 
    shell: CODE=`cat /etc/iscsi/initiatorname.iscsi` && echo ${CODE//InitiatorName=/}
    register: vm_initiator_code

  - name: Assign fact 
    set_fact:
      initiator_name: "{{ vm_initiator_code.stdout }}"

  - name: Ensure the iscs-manifests folder exists in the cluster package
    local_action:
      module: shell
      _raw_params: mkdir -p ../clusters/{{ cluster_pkg_folder }}/iscsi-manifests
    become: false

  - name: Generate the iSCSI provisioner, roles and storage class manifest
    local_action:
      module: template
      src: templates/coreos-iscsi-manifests.j2
      dest: ../clusters/{{ cluster_pkg_folder }}/iscsi-manifests/coreos-iscsi.yml
      mode: 0766
    become: false

  - name: Generate the iSCSI provisioner secret script
    local_action:
      module: template
      src: templates/coreos-iscsi-secret.j2
      dest: ../clusters/{{ cluster_pkg_folder }}/iscsi-manifests/coreos-iscsi-secret.sh
      mode: 0766
    become: false    
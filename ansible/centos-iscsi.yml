---
# This playbook adds an iscsi provisioner to a centos7 Kubernetes cluster
- hosts: all
  remote_user: admin
  become: true
  any_errors_fatal: true
  vars:
    
    kube_config_file: "{{ playbook_dir | replace('/ansible', '') }}/clusters/{{ cluster_pkg_folder }}/kube-config"

  roles:
  - role: common
  - role: iscsi-provisioner

  tasks:

    - name: install the iscsi-provisioner secret into the {{ cluster_name }} Kubernetes cluster.
      local_action:
        module: shell
        _raw_params: "kubectl --kubeconfig {{ kube_config_file }} create secret generic {{ targetd_server_account_credentials }} --from-literal=username={{ targetd_server_account_username }} --from-literal=password={{ targetd_server_account_password }} -n {{ targetd_server_namespace }}"
      become: false
      run_once: true
      register: iscsi_secret_cmd
      when: targetd_server is defined 
    
    - debug: msg="{{ iscsi_secret_cmd.stdout_lines }}"
      run_once: true
      when: targetd_server is defined 

    - name: apply the iscsi-provisioner storage class and provisioner manifests
      local_action:
        module: shell
        _raw_params: "kubectl --kubeconfig {{ kube_config_file }} apply -f ../clusters/{{ cluster_pkg_folder }}/iscsi-manifests/iscsi.yml -n {{ targetd_server_namespace }}"
      become: false
      run_once: true
      register: iscsi_prov_cmd
      when: targetd_server is defined 

    - debug: msg="{{ iscsi_prov_cmd.stdout_lines }}"
      run_once: true
      when: targetd_server is defined 

    - name: verify the storage class 
      local_action:
        module: shell
        _raw_params: "kubectl --kubeconfig {{ kube_config_file }} get sc -n {{ targetd_server_namespace }}"
      become: false
      run_once: true
      register: iscsi_scv_cmd
      when: targetd_server is defined 

    - debug: msg="{{ iscsi_scv_cmd.stdout_lines }}"
      run_once: true
      when: targetd_server is defined 

    - name: verify the iscsi-provisioner pod
      local_action:
        module: shell
        _raw_params: "kubectl --kubeconfig {{ kube_config_file }} get pods -n {{ targetd_server_namespace }}"
      become: false
      run_once: true
      register: iscsi_podv_cmd
      when: targetd_server is defined 

    - debug: msg="{{ iscsi_podv_cmd.stdout_lines }}"
      run_once: true
      when: targetd_server is defined 

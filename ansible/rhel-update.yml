---
# This playbook updates the OS for a RHEL7 cluster

- hosts: docker_swarm_manager:vmware_vms
  remote_user: admin
  become: true
  any_errors_fatal: true
  serial: 1
  vars:
    docker_swarm_mgr: "{{ hostvars[groups['docker_swarm_manager'][0]]['ansible_hostname'] }}"

  tasks:



  - debug: msg="{{ ansible_date_time.time }}"

  - name: get docker node info
    shell: 'docker node ls'
    delegate_to: "{{ docker_swarm_mgr }}"
    register: result

  - debug: msg="{{ result.stdout_lines }}"

  - name: drain the docker node
    shell: 'docker node update --availability drain {{ inventory_hostname }}'
    delegate_to: "{{ docker_swarm_mgr }}"

  - name: Wait for the containers to be redeployed
    pause:
      minutes: 1

  - name: Update OS
    yum:
      name: '*'
      state: latest
    register: result

  - debug: msg="{{ result.stdout_lines }}"

  - name: Restart server
    shell: sleep 5 && logger "Reboot triggered by Ansible script" && shutdown -r now "Reboot triggered by Ansible script"
    async: 1
    poll: 0
    ignore_errors: true

  - name: Wait for server to come back online.
    local_action: wait_for host={{ inventory_hostname }} port=22 state=started delay=60 timeout=600 
    become: false

  - name: Reactivate the docker node
    shell: 'docker node update --availability active {{ inventory_hostname }}'
    delegate_to: "{{ docker_swarm_mgr }}" 

  - name: Wait for the containers to be redeployed
    pause:
      minutes: 1

